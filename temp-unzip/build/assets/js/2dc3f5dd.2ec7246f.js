"use strict";(self.webpackChunkfigma_to_code_docusaurus=self.webpackChunkfigma_to_code_docusaurus||[]).push([[1616],{1012:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"figma-to-code-playbook","title":"Complete Figma to Code Conversion Playbook for React & Angular","description":"Introduction","source":"@site/docs/figma-to-code-playbook.md","sourceDirName":".","slug":"/figma-to-code-playbook","permalink":"/Design-to-Code-Playbook/docs/figma-to-code-playbook","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(4848),s=t(8453);const o={},a="Complete Figma to Code Conversion Playbook for React & Angular",l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Table of Contents",id:"table-of-contents",level:2},{value:"1. Preparing Figma Designs for Optimal Conversion",id:"1-preparing-figma-designs-for-optimal-conversion",level:2},{value:"Organizing Figma Files",id:"organizing-figma-files",level:3},{value:"Key Figma Features to Leverage",id:"key-figma-features-to-leverage",level:3},{value:"Auto Layout",id:"auto-layout",level:4},{value:"Component Variants and Properties",id:"component-variants-and-properties",level:4},{value:"Design Tokens and Variables",id:"design-tokens-and-variables",level:4},{value:"Documentation for Developers",id:"documentation-for-developers",level:3},{value:"Preparing for Export",id:"preparing-for-export",level:3},{value:"2. Setting Up the Development Environment",id:"2-setting-up-the-development-environment",level:2},{value:"VS Code Configuration",id:"vs-code-configuration",level:3},{value:"Required Node Modules",id:"required-node-modules",level:3},{value:"Setting Up MCP Configuration",id:"setting-up-mcp-configuration",level:3},{value:"Environment Setup",id:"environment-setup",level:3},{value:"3. GitHub Copilot Integration",id:"3-github-copilot-integration",level:2},{value:"Enabling GitHub Copilot in VS Code",id:"enabling-github-copilot-in-vs-code",level:3},{value:"Custom Instructions for Figma-to-Code",id:"custom-instructions-for-figma-to-code",level:3},{value:"Effective Prompting Techniques",id:"effective-prompting-techniques",level:3},{value:"4. MCP Servers for Figma and GitHub",id:"4-mcp-servers-for-figma-and-github",level:2},{value:"What are MCP Servers?",id:"what-are-mcp-servers",level:3},{value:"Installing and Configuring Figma MCP Server",id:"installing-and-configuring-figma-mcp-server",level:3},{value:"Installing and Configuring GitHub MCP Server",id:"installing-and-configuring-github-mcp-server",level:3},{value:"Using MCP Servers with GitHub Copilot",id:"using-mcp-servers-with-github-copilot",level:3},{value:"5. Azure AI Foundry Integration",id:"5-azure-ai-foundry-integration",level:2},{value:"Setting Up Azure AI Foundry",id:"setting-up-azure-ai-foundry",level:3},{value:"Azure AI Foundry for Design Analysis",id:"azure-ai-foundry-for-design-analysis",level:3},{value:"Integration Code Example",id:"integration-code-example",level:3},{value:"Azure AI Foundry Custom Workflows",id:"azure-ai-foundry-custom-workflows",level:3},{value:"6. Framework-Specific Implementation: React",id:"6-framework-specific-implementation-react",level:2},{value:"React Component Architecture",id:"react-component-architecture",level:3},{value:"Styling Approaches for React",id:"styling-approaches-for-react",level:3},{value:"1. Styled Components",id:"1-styled-components",level:4},{value:"2. Tailwind CSS",id:"2-tailwind-css",level:4},{value:"Advanced React Components",id:"advanced-react-components",level:3},{value:"Data Table Component",id:"data-table-component",level:4},{value:"React State Management",id:"react-state-management",level:3},{value:"Using Context API",id:"using-context-api",level:4},{value:"Using React Query for API State",id:"using-react-query-for-api-state",level:4},{value:"Performance Optimization in React",id:"performance-optimization-in-react",level:3},{value:"7. Framework-Specific Implementation: Angular",id:"7-framework-specific-implementation-angular",level:2},{value:"Angular Component Architecture",id:"angular-component-architecture",level:3},{value:"Angular Component Implementation",id:"angular-component-implementation",level:3},{value:"Button Component",id:"button-component",level:4},{value:"Angular Material Integration",id:"angular-material-integration",level:3},{value:"Advanced Angular Components",id:"advanced-angular-components",level:3},{value:"Data Table Component",id:"data-table-component-1",level:4},{value:"Angular State Management",id:"angular-state-management",level:3},{value:"Using NGRX Store",id:"using-ngrx-store",level:4},{value:"Angular Performance Optimization",id:"angular-performance-optimization",level:3},{value:"8. Component Library Implementation",id:"8-component-library-implementation",level:2},{value:"Creating a Unified Design System",id:"creating-a-unified-design-system",level:3},{value:"React Component Library Structure",id:"react-component-library-structure",level:3},{value:"Angular Component Library Structure",id:"angular-component-library-structure",level:3},{value:"Documenting Components with Storybook",id:"documenting-components-with-storybook",level:3},{value:"Testing Component Library",id:"testing-component-library",level:3},{value:"9. Testing and Quality Assurance",id:"9-testing-and-quality-assurance",level:2},{value:"Testing Strategy",id:"testing-strategy",level:3},{value:"Automated Testing Setup",id:"automated-testing-setup",level:3},{value:"Visual Regression Testing",id:"visual-regression-testing",level:3},{value:"Accessibility Testing",id:"accessibility-testing",level:3},{value:"Code Quality Checks",id:"code-quality-checks",level:3},{value:"10. Hands-On Workshop Guide",id:"10-hands-on-workshop-guide",level:2},{value:"Workshop Title: Build a Design System from Figma to Code",id:"workshop-title-build-a-design-system-from-figma-to-code",level:3},{value:"Workshop Structure",id:"workshop-structure",level:3},{value:"1. Introduction (15 minutes)",id:"1-introduction-15-minutes",level:4},{value:"2. Environment Setup (30 minutes)",id:"2-environment-setup-30-minutes",level:4},{value:"3. Implementing Core Components (60 minutes)",id:"3-implementing-core-components-60-minutes",level:4},{value:"4. Advanced Components (45 minutes)",id:"4-advanced-components-45-minutes",level:4},{value:"5. Integrating with Backend (30 minutes)",id:"5-integrating-with-backend-30-minutes",level:4},{value:"6. Wrap-up and Q&amp;A (15 minutes)",id:"6-wrap-up-and-qa-15-minutes",level:4},{value:"Exercise Examples",id:"exercise-examples",level:3},{value:"11. Demonstration Workshop Guide",id:"11-demonstration-workshop-guide",level:2},{value:"Workshop Title: From Pixels to Production: AI-Powered Design-to-Code",id:"workshop-title-from-pixels-to-production-ai-powered-design-to-code",level:3},{value:"Workshop Structure",id:"workshop-structure-1",level:3},{value:"1. Introduction (5 minutes)",id:"1-introduction-5-minutes",level:4},{value:"2. Design Analysis (10 minutes)",id:"2-design-analysis-10-minutes",level:4},{value:"3. Setup Demonstration (5 minutes)",id:"3-setup-demonstration-5-minutes",level:4},{value:"4. Live Coding Demonstrations (30 minutes)",id:"4-live-coding-demonstrations-30-minutes",level:4},{value:"5. Best Practices (5 minutes)",id:"5-best-practices-5-minutes",level:4},{value:"6. Q&amp;A (5 minutes)",id:"6-qa-5-minutes",level:4},{value:"Example Demos",id:"example-demos",level:3},{value:"12. Troubleshooting Guide",id:"12-troubleshooting-guide",level:2},{value:"Common Issues with Figma Integration",id:"common-issues-with-figma-integration",level:3},{value:"Common Issues with GitHub Copilot",id:"common-issues-with-github-copilot",level:3},{value:"Common Issues with React Implementation",id:"common-issues-with-react-implementation",level:3},{value:"Common Issues with Angular Implementation",id:"common-issues-with-angular-implementation",level:3}];function d(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...n.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(e.header,{children:(0,r.jsx)(e.h1,{id:"complete-figma-to-code-conversion-playbook-for-react--angular",children:"Complete Figma to Code Conversion Playbook for React & Angular"})}),"\n",(0,r.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(e.p,{children:"This comprehensive playbook provides a systematic approach to converting Figma designs into production-quality code using GitHub Copilot, MCP servers, and Azure AI Foundry. We focus specifically on React and Angular frameworks, covering everything from basic components to complex interactive elements."}),"\n",(0,r.jsx)(e.p,{children:"By following this guide, you'll establish a streamlined workflow that leverages AI tools to dramatically reduce development time while maintaining high fidelity to original designs."}),"\n",(0,r.jsx)(e.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#1-preparing-figma-designs-for-optimal-conversion",children:"Preparing Figma Designs for Optimal Conversion"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#2-setting-up-the-development-environment",children:"Setting Up the Development Environment"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#3-github-copilot-integration",children:"GitHub Copilot Integration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#4-mcp-servers-for-figma-and-github",children:"MCP Servers for Figma and GitHub"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#5-azure-ai-foundry-integration",children:"Azure AI Foundry Integration"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#6-framework-specific-implementation-react",children:"Framework-Specific Implementation: React"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#7-framework-specific-implementation-angular",children:"Framework-Specific Implementation: Angular"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#8-component-library-implementation",children:"Component Library Implementation"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#9-testing-and-quality-assurance",children:"Testing and Quality Assurance"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#10-hands-on-workshop-guide",children:"Hands-On Workshop Guide"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#11-demonstration-workshop-guide",children:"Demonstration Workshop Guide"})}),"\n",(0,r.jsx)(e.li,{children:(0,r.jsx)(e.a,{href:"#12-troubleshooting-guide",children:"Troubleshooting Guide"})}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"1-preparing-figma-designs-for-optimal-conversion",children:"1. Preparing Figma Designs for Optimal Conversion"}),"\n",(0,r.jsx)(e.h3,{id:"organizing-figma-files",children:"Organizing Figma Files"}),"\n",(0,r.jsx)(e.p,{children:"Structure your Figma files to optimize for AI-powered code generation:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Project/\n\u251c\u2500\u2500 \ud83d\udcc4 Design System\n\u2502   \u251c\u2500\u2500 \ud83c\udfa8 Colors & Typography\n\u2502   \u251c\u2500\u2500 \ud83e\udde9 Components\n\u2502   \u2514\u2500\u2500 \ud83d\udcd0 Spacing & Grid System\n\u251c\u2500\u2500 \ud83d\udcc4 Pages\n\u2502   \u251c\u2500\u2500 \ud83d\uddbc\ufe0f Homepage\n\u2502   \u251c\u2500\u2500 \ud83d\uddbc\ufe0f User Dashboard\n\u2502   \u2514\u2500\u2500 \ud83d\uddbc\ufe0f Settings\n\u2514\u2500\u2500 \ud83d\udcc4 Development-Ready Screens (\u2705 Ready for Dev)\n"})}),"\n",(0,r.jsx)(e.h3,{id:"key-figma-features-to-leverage",children:"Key Figma Features to Leverage"}),"\n",(0,r.jsx)(e.h4,{id:"auto-layout",children:"Auto Layout"}),"\n",(0,r.jsx)(e.p,{children:"Auto Layout in Figma directly translates to flexbox or grid in CSS, making it essential for responsive designs:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.img,{src:"https://example.com/auto-layout.png",alt:"Auto Layout Structure"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Best Practices:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Use vertical or horizontal Auto Layout for all component containers"}),"\n",(0,r.jsx)(e.li,{children:'Set consistent spacing with "Space Between Items"'}),"\n",(0,r.jsx)(e.li,{children:'Utilize "Fill Container" for responsive elements'}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"component-variants-and-properties",children:"Component Variants and Properties"}),"\n",(0,r.jsx)(e.p,{children:"Component variants in Figma create a direct mapping to component props in code:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Button (Component)\n\u251c\u2500\u2500 Primary (Variant)\n\u251c\u2500\u2500 Secondary (Variant)\n\u251c\u2500\u2500 Outlined (Variant)\n\u2514\u2500\u2500 Text (Variant)\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Properties to Define:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"State: Default, Hover, Pressed, Disabled"}),"\n",(0,r.jsx)(e.li,{children:"Size: Small, Medium, Large"}),"\n",(0,r.jsx)(e.li,{children:"Icon Position: Left, Right, Icon Only"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"design-tokens-and-variables",children:"Design Tokens and Variables"}),"\n",(0,r.jsx)(e.p,{children:"Use Figma Variables for all:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Color values"}),"\n",(0,r.jsx)(e.li,{children:"Typography styles"}),"\n",(0,r.jsx)(e.li,{children:"Spacing values"}),"\n",(0,r.jsx)(e.li,{children:"Border radii"}),"\n",(0,r.jsx)(e.li,{children:"Shadow styles"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"This creates a direct mapping to CSS variables or theme configuration."}),"\n",(0,r.jsx)(e.h3,{id:"documentation-for-developers",children:"Documentation for Developers"}),"\n",(0,r.jsx)(e.p,{children:"Add developer-specific annotations directly in Figma:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Component behavior descriptions"}),"\n",(0,r.jsx)(e.li,{children:"Interactive state information"}),"\n",(0,r.jsx)(e.li,{children:"Responsive behavior notes"}),"\n",(0,r.jsx)(e.li,{children:"Animation specifications"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"preparing-for-export",children:"Preparing for Export"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Enable Dev Mode in Figma"}),"\n",(0,r.jsx)(e.li,{children:"Create a dedicated handoff page with all components"}),"\n",(0,r.jsx)(e.li,{children:"Organize components by type (Navigation, Forms, Cards, etc.)"}),"\n",(0,r.jsx)(e.li,{children:'Use the "Ready for Development" status flag'}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"2-setting-up-the-development-environment",children:"2. Setting Up the Development Environment"}),"\n",(0,r.jsx)(e.h3,{id:"vs-code-configuration",children:"VS Code Configuration"}),"\n",(0,r.jsx)(e.p,{children:"Install the following extensions:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"GitHub Copilot and GitHub Copilot Chat"}),"\n",(0,r.jsx)(e.li,{children:"Figma for VS Code"}),"\n",(0,r.jsx)(e.li,{children:"Azure Tools Extension"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"required-node-modules",children:"Required Node Modules"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# For React projects\nnpm install react react-dom styled-components tailwindcss\n\n# For Angular projects\nng new my-project --style=scss\nng add @angular/material\n"})}),"\n",(0,r.jsx)(e.h3,{id:"setting-up-mcp-configuration",children:"Setting Up MCP Configuration"}),"\n",(0,r.jsxs)(e.p,{children:["Create an ",(0,r.jsx)(e.code,{children:".mcp.json"})," file in your project root:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "servers": {\n    "figma": {\n      "type": "stdio",\n      "command": "npx",\n      "args": [\n        "figma-developer-mcp",\n        "--figma-api-key=${env:FIGMA_API_KEY}"\n      ]\n    },\n    "github": {\n      "command": "docker",\n      "args": [\n        "run",\n        "-i",\n        "--rm",\n        "-e",\n        "GITHUB_PERSONAL_ACCESS_TOKEN",\n        "ghcr.io/github/github-mcp-server"\n      ],\n      "env": {\n        "GITHUB_PERSONAL_ACCESS_TOKEN": "${env:GITHUB_TOKEN}"\n      }\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,r.jsxs)(e.p,{children:["Create a ",(0,r.jsx)(e.code,{children:".env"})," file with necessary API keys:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"FIGMA_API_KEY=your_figma_api_key\nGITHUB_TOKEN=your_github_token\nAZURE_AI_FOUNDRY_KEY=your_azure_key\nAZURE_AI_FOUNDRY_ENDPOINT=your_azure_endpoint\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"3-github-copilot-integration",children:"3. GitHub Copilot Integration"}),"\n",(0,r.jsx)(e.h3,{id:"enabling-github-copilot-in-vs-code",children:"Enabling GitHub Copilot in VS Code"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Install GitHub Copilot extension"}),"\n",(0,r.jsx)(e.li,{children:"Sign in with your GitHub account"}),"\n",(0,r.jsx)(e.li,{children:"Enable Copilot agent mode (through Command Palette)"}),"\n",(0,r.jsx)(e.li,{children:"Configure custom instructions for your project"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"custom-instructions-for-figma-to-code",children:"Custom Instructions for Figma-to-Code"}),"\n",(0,r.jsxs)(e.p,{children:["Create a ",(0,r.jsx)(e.code,{children:".github/copilot-instructions.md"})," file in your project:"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-markdown",children:"## Design-to-Code Guidelines\n- Use TypeScript for all component development\n- Follow Atomic Design principles (atoms, molecules, organisms)\n- Implement responsive design using flexbox and CSS Grid\n- Generate accessibility-compliant code (WCAG AA)\n- Use styled-components for React / SCSS for Angular\n\n## Structure\n- Create components in a consistent folder structure\n- Include storybook documentation\n- Add appropriate unit tests\n- Follow design tokens from Figma\n"})}),"\n",(0,r.jsx)(e.h3,{id:"effective-prompting-techniques",children:"Effective Prompting Techniques"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Simple Component Request:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Create a Button component based on the Figma design with:\n- Primary, secondary, and outlined variants\n- Small, medium, and large sizes\n- Support for left and right icons\n- Disabled state styling\n- Loading state with spinner\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Complex Component Request:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Generate a DataTable component that:\n1. Supports sorting by column\n2. Includes pagination\n3. Allows row selection\n4. Implements responsive behavior for mobile\n5. Has a search/filter function\n6. Matches the Figma design's visual styling\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"For Component Tree Generation:"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Analyze the main dashboard layout from the Figma design and:\n1. Create a component hierarchy diagram\n2. Generate the necessary component files\n3. Implement the layout structure\n4. Connect components with proper props drilling\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"4-mcp-servers-for-figma-and-github",children:"4. MCP Servers for Figma and GitHub"}),"\n",(0,r.jsx)(e.h3,{id:"what-are-mcp-servers",children:"What are MCP Servers?"}),"\n",(0,r.jsx)(e.p,{children:"MCP (Model Context Protocol) servers provide a standardized way for AI assistants to interact with external tools and services. In our workflow, we use:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Figma MCP Server"}),": Provides design information directly to GitHub Copilot"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"GitHub MCP Server"}),": Enables repository operations through Copilot"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"installing-and-configuring-figma-mcp-server",children:"Installing and Configuring Figma MCP Server"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"# Install the Figma Developer MCP globally\nnpm install -g figma-developer-mcp\n\n# Run the server\nfigma-developer-mcp --figma-api-key=YOUR_API_KEY\n"})}),"\n",(0,r.jsx)(e.p,{children:"For persistent configuration, add to VS Code settings.json:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "mcp.servers": {\n    "figma": {\n      "command": "figma-developer-mcp",\n      "args": ["--figma-api-key=${env:FIGMA_API_KEY}"]\n    }\n  }\n}\n'})}),"\n",(0,r.jsx)(e.h3,{id:"installing-and-configuring-github-mcp-server",children:"Installing and Configuring GitHub MCP Server"}),"\n",(0,r.jsx)(e.p,{children:"Using Docker:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"docker run -i --rm \\\n  -e GITHUB_PERSONAL_ACCESS_TOKEN=YOUR_TOKEN \\\n  ghcr.io/github/github-mcp-server\n"})}),"\n",(0,r.jsx)(e.h3,{id:"using-mcp-servers-with-github-copilot",children:"Using MCP Servers with GitHub Copilot"}),"\n",(0,r.jsx)(e.p,{children:"Once configured, you'll have access to new tools in GitHub Copilot:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Figma MCP Tools:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"get_figma_file"}),": Retrieve entire Figma file information"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"get_figma_node"}),": Get details about specific components"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"download_figma_images"}),": Extract images and icons"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"GitHub MCP Tools:"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"create_repository"}),": Create new GitHub repositories"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"create_branch"}),": Create branches for component development"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.code,{children:"push_files"}),": Push generated code directly to GitHub"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:"Example workflow integrating both tools:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:'# In GitHub Copilot Chat\n/agent Generate React components from the Figma design at https://www.figma.com/file/abc123, \ncreate a new GitHub repository called "design-system", and push the components there.\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"5-azure-ai-foundry-integration",children:"5. Azure AI Foundry Integration"}),"\n",(0,r.jsx)(e.h3,{id:"setting-up-azure-ai-foundry",children:"Setting Up Azure AI Foundry"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Create an Azure AI Foundry resource in Azure Portal"}),"\n",(0,r.jsx)(e.li,{children:"Generate API keys and endpoints"}),"\n",(0,r.jsx)(e.li,{children:"Configure the connection in your development environment"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"azure-ai-foundry-for-design-analysis",children:"Azure AI Foundry for Design Analysis"}),"\n",(0,r.jsx)(e.p,{children:"Azure AI Foundry can enhance the design-to-code workflow by:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Design Pattern Recognition"}),": Identifying common UI patterns"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Accessibility Auditing"}),": Ensuring WCAG compliance"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Design Token Extraction"}),": Converting colors, typography, and spacing to code"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Performance Optimization"}),": Suggesting code improvements"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"integration-code-example",children:"Integration Code Example"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"import { AzureAIFoundryClient } from '@azure/ai-foundry';\n\n// Create a client\nconst client = new AzureAIFoundryClient({\n  endpoint: process.env.AZURE_AI_FOUNDRY_ENDPOINT,\n  apiKey: process.env.AZURE_AI_FOUNDRY_KEY\n});\n\n// Analyze a design \nasync function analyzeDesign(figmaImage) {\n  const result = await client.analyzeImage({\n    image: figmaImage,\n    features: ['componentDetection', 'accessibilityCheck']\n  });\n  \n  return result;\n}\n\n// Generate optimized code\nasync function generateOptimizedCode(designSpec, framework) {\n  const result = await client.generateCode({\n    specification: designSpec,\n    framework: framework, // 'react' or 'angular'\n    optimizationLevel: 'production'\n  });\n  \n  return result.code;\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"azure-ai-foundry-custom-workflows",children:"Azure AI Foundry Custom Workflows"}),"\n",(0,r.jsx)(e.p,{children:"Create an AI Foundry project to define custom workflows:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Design Import Workflow"}),": Automatically import Figma designs"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Code Generation Pipeline"}),": Generate framework-specific code"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Quality Check Process"}),": Validate generated code against best practices"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Version Control Integration"}),": Commit changes to repositories"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"6-framework-specific-implementation-react",children:"6. Framework-Specific Implementation: React"}),"\n",(0,r.jsx)(e.h3,{id:"react-component-architecture",children:"React Component Architecture"}),"\n",(0,r.jsx)(e.p,{children:"Organize React components following Atomic Design principles:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"src/\n\u251c\u2500\u2500 components/\n\u2502   \u251c\u2500\u2500 atoms/\n\u2502   \u2502   \u251c\u2500\u2500 Button/\n\u2502   \u2502   \u251c\u2500\u2500 Input/\n\u2502   \u2502   \u2514\u2500\u2500 Typography/\n\u2502   \u251c\u2500\u2500 molecules/\n\u2502   \u2502   \u251c\u2500\u2500 FormField/\n\u2502   \u2502   \u251c\u2500\u2500 Card/\n\u2502   \u2502   \u2514\u2500\u2500 Modal/\n\u2502   \u2514\u2500\u2500 organisms/\n\u2502       \u251c\u2500\u2500 Header/\n\u2502       \u251c\u2500\u2500 Sidebar/\n\u2502       \u2514\u2500\u2500 DataTable/\n\u251c\u2500\u2500 pages/\n\u2502   \u251c\u2500\u2500 Dashboard/\n\u2502   \u251c\u2500\u2500 Profile/\n\u2502   \u2514\u2500\u2500 Settings/\n\u2514\u2500\u2500 themes/\n    \u251c\u2500\u2500 tokens.js\n    \u2514\u2500\u2500 globalStyles.js\n"})}),"\n",(0,r.jsx)(e.h3,{id:"styling-approaches-for-react",children:"Styling Approaches for React"}),"\n",(0,r.jsx)(e.h4,{id:"1-styled-components",children:"1. Styled Components"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import styled from 'styled-components';\n\nconst ButtonContainer = styled.button`\n  padding: ${props => props.size === 'small' ? '8px 16px' : '12px 24px'};\n  background-color: ${props => props.variant === 'primary' ? 'var(--primary-color)' : 'transparent'};\n  color: ${props => props.variant === 'primary' ? 'white' : 'var(--primary-color)'};\n  border: ${props => props.variant === 'outlined' ? '1px solid var(--primary-color)' : 'none'};\n  border-radius: 4px;\n  font-weight: 500;\n  \n  &:hover {\n    background-color: ${props => props.variant === 'primary' ? 'var(--primary-dark)' : 'var(--gray-100)'};\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nexport const Button = ({ variant = 'primary', size = 'medium', children, ...props }) => (\n  <ButtonContainer variant={variant} size={size} {...props}>\n    {children}\n  </ButtonContainer>\n);\n"})}),"\n",(0,r.jsx)(e.h4,{id:"2-tailwind-css",children:"2. Tailwind CSS"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"const Button = ({ variant = 'primary', size = 'medium', children, ...props }) => {\n  const variantClasses = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700',\n    secondary: 'bg-gray-200 text-gray-800 hover:bg-gray-300',\n    outlined: 'bg-transparent border border-blue-600 text-blue-600 hover:bg-blue-50'\n  };\n  \n  const sizeClasses = {\n    small: 'px-4 py-2 text-sm',\n    medium: 'px-6 py-3 text-base',\n    large: 'px-8 py-4 text-lg'\n  };\n  \n  return (\n    <button \n      className={`rounded-md font-medium focus:outline-none focus:ring-2 ${variantClasses[variant]} ${sizeClasses[size]} ${props.disabled ? 'opacity-50 cursor-not-allowed' : ''}`}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"advanced-react-components",children:"Advanced React Components"}),"\n",(0,r.jsx)(e.h4,{id:"data-table-component",children:"Data Table Component"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n`;\n\nconst TableHeader = styled.th`\n  text-align: left;\n  padding: 12px;\n  border-bottom: 2px solid var(--border-color);\n  cursor: ${props => props.sortable ? 'pointer' : 'default'};\n`;\n\nconst TableRow = styled.tr`\n  &:nth-child(even) {\n    background-color: var(--bg-secondary);\n  }\n  \n  &:hover {\n    background-color: var(--hover-color);\n  }\n  \n  ${props => props.selected && `\n    background-color: var(--selected-color) !important;\n  `}\n`;\n\nconst TableCell = styled.td`\n  padding: 12px;\n  border-bottom: 1px solid var(--border-color);\n`;\n\nconst Pagination = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 16px;\n`;\n\nexport const DataTable = ({ \n  data, \n  columns, \n  sortable = true,\n  selectable = false,\n  pagination = true,\n  itemsPerPage = 10\n}) => {\n  const [sortColumn, setSortColumn] = useState(null);\n  const [sortDirection, setSortDirection] = useState('asc');\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  \n  const handleSort = (column) => {\n    if (!sortable || !column.sortable) return;\n    \n    if (sortColumn === column.key) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortColumn(column.key);\n      setSortDirection('asc');\n    }\n  };\n  \n  const handleRowSelection = (rowId) => {\n    if (!selectable) return;\n    \n    setSelectedRows(prev => {\n      if (prev.includes(rowId)) {\n        return prev.filter(id => id !== rowId);\n      } else {\n        return [...prev, rowId];\n      }\n    });\n  };\n  \n  // Sort data\n  let sortedData = [...data];\n  if (sortColumn) {\n    sortedData.sort((a, b) => {\n      if (a[sortColumn] < b[sortColumn]) return sortDirection === 'asc' ? -1 : 1;\n      if (a[sortColumn] > b[sortColumn]) return sortDirection === 'asc' ? 1 : -1;\n      return 0;\n    });\n  }\n  \n  // Paginate data\n  const totalPages = Math.ceil(sortedData.length / itemsPerPage);\n  const paginatedData = pagination \n    ? sortedData.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage)\n    : sortedData;\n  \n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            {selectable && (\n              <TableHeader>\n                <input \n                  type=\"checkbox\" \n                  onChange={() => {/* Handle select all */}}\n                />\n              </TableHeader>\n            )}\n            {columns.map(column => (\n              <TableHeader \n                key={column.key}\n                sortable={sortable && column.sortable}\n                onClick={() => handleSort(column)}\n              >\n                {column.title}\n                {sortColumn === column.key && (\n                  <span>{sortDirection === 'asc' ? ' \u2191' : ' \u2193'}</span>\n                )}\n              </TableHeader>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {paginatedData.map((row, index) => (\n            <TableRow \n              key={row.id || index}\n              selected={selectedRows.includes(row.id)}\n              onClick={() => handleRowSelection(row.id)}\n            >\n              {selectable && (\n                <TableCell>\n                  <input \n                    type=\"checkbox\" \n                    checked={selectedRows.includes(row.id)}\n                    onChange={() => {/* For controlled component */}}\n                  />\n                </TableCell>\n              )}\n              {columns.map(column => (\n                <TableCell key={column.key}>\n                  {column.render ? column.render(row) : row[column.key]}\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </tbody>\n      </Table>\n      \n      {pagination && totalPages > 1 && (\n        <Pagination>\n          <button \n            disabled={currentPage === 1}\n            onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))}\n          >\n            Previous\n          </button>\n          <span>Page {currentPage} of {totalPages}</span>\n          <button \n            disabled={currentPage === totalPages}\n            onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))}\n          >\n            Next\n          </button>\n        </Pagination>\n      )}\n    </div>\n  );\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"react-state-management",children:"React State Management"}),"\n",(0,r.jsx)(e.h4,{id:"using-context-api",children:"Using Context API"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"// ThemeContext.js\nimport React, { createContext, useState, useContext } from 'react';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState('light');\n  \n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light');\n  };\n  \n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => useContext(ThemeContext);\n"})}),"\n",(0,r.jsx)(e.h4,{id:"using-react-query-for-api-state",children:"Using React Query for API State"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import { useQuery, useMutation, QueryClient, QueryClientProvider } from 'react-query';\n\n// Setup\nconst queryClient = new QueryClient();\n\n// Wrap your app\n<QueryClientProvider client={queryClient}>\n  <App />\n</QueryClientProvider>\n\n// In components\nconst UserProfile = ({ userId }) => {\n  const { data, isLoading, error } = useQuery(['user', userId], \n    () => fetch(`/api/users/${userId}`).then(res => res.json())\n  );\n  \n  const updateMutation = useMutation(\n    (userData) => fetch(`/api/users/${userId}`, {\n      method: 'PUT',\n      body: JSON.stringify(userData)\n    }).then(res => res.json()),\n    {\n      onSuccess: () => {\n        queryClient.invalidateQueries(['user', userId]);\n      }\n    }\n  );\n  \n  if (isLoading) return <Spinner />;\n  if (error) return <ErrorMessage error={error} />;\n  \n  return (\n    <ProfileForm \n      user={data} \n      onSubmit={updateMutation.mutate}\n      isSubmitting={updateMutation.isLoading}\n    />\n  );\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"performance-optimization-in-react",children:"Performance Optimization in React"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Memoizing Components with React.memo"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"const UserAvatar = React.memo(({ user }) => (\n  <img src={user.avatar} alt={user.name} />\n));\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Using useCallback for Event Handlers"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"const handleSubmit = useCallback((formData) => {\n  submitForm(formData);\n}, [submitForm]);\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Using useMemo for Expensive Calculations"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"const sortedItems = useMemo(() => {\n  return [...items].sort((a, b) => a.name.localeCompare(b.name));\n}, [items]);\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Implementing Virtualization for Large Lists"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"import { FixedSizeList } from 'react-window';\n\nconst VirtualizedList = ({ items }) => (\n  <FixedSizeList\n    height={500}\n    width=\"100%\"\n    itemCount={items.length}\n    itemSize={50}\n  >\n    {({ index, style }) => (\n      <div style={style}>\n        {items[index].name}\n      </div>\n    )}\n  </FixedSizeList>\n);\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Using Code Splitting with React.lazy"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"const Dashboard = React.lazy(() => import('./Dashboard'));\n\nfunction App() {\n  return (\n    <Suspense fallback={<Spinner />}>\n      <Dashboard />\n    </Suspense>\n  );\n}\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"7-framework-specific-implementation-angular",children:"7. Framework-Specific Implementation: Angular"}),"\n",(0,r.jsx)(e.h3,{id:"angular-component-architecture",children:"Angular Component Architecture"}),"\n",(0,r.jsx)(e.p,{children:"Organize Angular components using feature modules:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"src/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 core/\n\u2502   \u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 auth.service.ts\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 api.service.ts\n\u2502   \u2502   \u2514\u2500\u2500 guards/\n\u2502   \u2502       \u2514\u2500\u2500 auth.guard.ts\n\u2502   \u251c\u2500\u2500 shared/\n\u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 button/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 input/\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 modal/\n\u2502   \u2502   \u251c\u2500\u2500 directives/\n\u2502   \u2502   \u2514\u2500\u2500 pipes/\n\u2502   \u251c\u2500\u2500 features/\n\u2502   \u2502   \u251c\u2500\u2500 dashboard/\n\u2502   \u2502   \u251c\u2500\u2500 profile/\n\u2502   \u2502   \u2514\u2500\u2500 settings/\n\u2502   \u2514\u2500\u2500 theme/\n\u2502       \u251c\u2500\u2500 _variables.scss\n\u2502       \u2514\u2500\u2500 _mixins.scss\n"})}),"\n",(0,r.jsx)(e.h3,{id:"angular-component-implementation",children:"Angular Component Implementation"}),"\n",(0,r.jsx)(e.h4,{id:"button-component",children:"Button Component"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// button.component.ts\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n  @Input() variant: 'primary' | 'secondary' | 'outlined' = 'primary';\n  @Input() size: 'small' | 'medium' | 'large' = 'medium';\n  @Input() disabled = false;\n  @Input() loading = false;\n  @Input() leftIcon: string;\n  @Input() rightIcon: string;\n  \n  @Output() clicked = new EventEmitter<void>();\n  \n  handleClick(): void {\n    if (!this.disabled && !this.loading) {\n      this.clicked.emit();\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:'\x3c!-- button.component.html --\x3e\n<button \n  [ngClass]="[\n    \'app-button\', \n    \'app-button--\' + variant,\n    \'app-button--\' + size,\n    disabled ? \'app-button--disabled\' : \'\',\n    loading ? \'app-button--loading\' : \'\'\n  ]"\n  [disabled]="disabled || loading"\n  (click)="handleClick()"\n>\n  <mat-icon *ngIf="leftIcon && !loading">{{leftIcon}}</mat-icon>\n  <mat-spinner *ngIf="loading" diameter="20"></mat-spinner>\n  <span class="app-button__content">\n    <ng-content></ng-content>\n  </span>\n  <mat-icon *ngIf="rightIcon && !loading">{{rightIcon}}</mat-icon>\n</button>\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scss",children:"// button.component.scss\n@import '../../theme/variables';\n\n.app-button {\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-family: var(--font-family);\n  font-weight: 500;\n  border-radius: 4px;\n  border: none;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  \n  &__content {\n    margin: 0 0.5rem;\n  }\n  \n  // Variants\n  &--primary {\n    background-color: var(--primary-color);\n    color: white;\n    \n    &:hover:not(.app-button--disabled) {\n      background-color: var(--primary-dark);\n    }\n  }\n  \n  &--secondary {\n    background-color: var(--secondary-color);\n    color: var(--text-on-secondary);\n    \n    &:hover:not(.app-button--disabled) {\n      background-color: var(--secondary-dark);\n    }\n  }\n  \n  &--outlined {\n    background-color: transparent;\n    color: var(--primary-color);\n    border: 1px solid var(--primary-color);\n    \n    &:hover:not(.app-button--disabled) {\n      background-color: rgba(var(--primary-color-rgb), 0.05);\n    }\n  }\n  \n  // Sizes\n  &--small {\n    padding: 8px 16px;\n    font-size: 14px;\n  }\n  \n  &--medium {\n    padding: 12px 24px;\n    font-size: 16px;\n  }\n  \n  &--large {\n    padding: 16px 32px;\n    font-size: 18px;\n  }\n  \n  // States\n  &--disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  \n  &--loading {\n    cursor: wait;\n  }\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"angular-material-integration",children:"Angular Material Integration"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// app.module.ts\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTableModule } from '@angular/material/table';\n// Other Material imports\n\nimport { AppComponent } from './app.component';\nimport { SharedModule } from './shared/shared.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTableModule,\n    // Other Material modules\n    SharedModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n"})}),"\n",(0,r.jsx)(e.h3,{id:"advanced-angular-components",children:"Advanced Angular Components"}),"\n",(0,r.jsx)(e.h4,{id:"data-table-component-1",children:"Data Table Component"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// data-table.component.ts\nimport { Component, Input, Output, EventEmitter, ViewChild, OnChanges } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nexport interface TableColumn {\n  key: string;\n  title: string;\n  sortable?: boolean;\n}\n\n@Component({\n  selector: 'app-data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.scss']\n})\nexport class DataTableComponent implements OnChanges {\n  @Input() data: any[] = [];\n  @Input() columns: TableColumn[] = [];\n  @Input() selectable = false;\n  @Input() pagination = true;\n  @Input() pageSize = 10;\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 50];\n  \n  @Output() rowSelected = new EventEmitter<any[]>();\n  @Output() rowClicked = new EventEmitter<any>();\n  \n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  \n  dataSource = new MatTableDataSource<any>([]);\n  selection = new SelectionModel<any>(true, []);\n  displayedColumns: string[] = [];\n  \n  ngOnChanges(): void {\n    this.dataSource.data = this.data;\n    this.updateDisplayedColumns();\n    \n    if (this.paginator) {\n      this.dataSource.paginator = this.paginator;\n    }\n    \n    if (this.sort) {\n      this.dataSource.sort = this.sort;\n    }\n  }\n  \n  ngAfterViewInit(): void {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n  \n  updateDisplayedColumns(): void {\n    this.displayedColumns = this.columns.map(column => column.key);\n    \n    if (this.selectable) {\n      this.displayedColumns.unshift('select');\n    }\n  }\n  \n  isAllSelected(): boolean {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n  \n  masterToggle(): void {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n    } else {\n      this.dataSource.data.forEach(row => this.selection.select(row));\n    }\n    \n    this.rowSelected.emit(this.selection.selected);\n  }\n  \n  rowSelectionToggle(row: any): void {\n    this.selection.toggle(row);\n    this.rowSelected.emit(this.selection.selected);\n  }\n  \n  onRowClick(row: any): void {\n    this.rowClicked.emit(row);\n  }\n  \n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n    \n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:'\x3c!-- data-table.component.html --\x3e\n<div class="data-table-container">\n  <mat-form-field appearance="outline" class="filter-field">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)="applyFilter($event)" placeholder="Search...">\n    <mat-icon matSuffix>search</mat-icon>\n  </mat-form-field>\n\n  <div class="table-wrapper">\n    <table mat-table [dataSource]="dataSource" matSort>\n      \x3c!-- Checkbox Column --\x3e\n      <ng-container matColumnDef="select" *ngIf="selectable">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox \n            (change)="masterToggle()"\n            [checked]="selection.hasValue() && isAllSelected()"\n            [indeterminate]="selection.hasValue() && !isAllSelected()">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef="let row">\n          <mat-checkbox \n            (click)="$event.stopPropagation()"\n            (change)="rowSelectionToggle(row)"\n            [checked]="selection.isSelected(row)">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      \x3c!-- Dynamic Columns --\x3e\n      <ng-container *ngFor="let column of columns" [matColumnDef]="column.key">\n        <th mat-header-cell *matHeaderCellDef [mat-sort-header]="column.sortable ? column.key : null">\n          {{ column.title }}\n        </th>\n        <td mat-cell *matCellDef="let element" (click)="onRowClick(element)">\n          {{ element[column.key] }}\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef="displayedColumns; sticky: true"></tr>\n      <tr \n        mat-row \n        *matRowDef="let row; columns: displayedColumns;"\n        [class.selected-row]="selection.isSelected(row)"\n      ></tr>\n\n      \x3c!-- No Data Row --\x3e\n      <tr class="mat-row" *matNoDataRow>\n        <td class="mat-cell no-data" [attr.colspan]="displayedColumns.length">\n          No data matching the filter\n        </td>\n      </tr>\n    </table>\n  </div>\n\n  <mat-paginator \n    *ngIf="pagination"\n    [pageSize]="pageSize"\n    [pageSizeOptions]="pageSizeOptions"\n    showFirstLastButtons>\n  </mat-paginator>\n</div>\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-scss",children:"// data-table.component.scss\n.data-table-container {\n  width: 100%;\n  \n  .filter-field {\n    width: 100%;\n    margin-bottom: 16px;\n  }\n  \n  .table-wrapper {\n    overflow-x: auto;\n    \n    table {\n      width: 100%;\n      \n      .mat-row {\n        &:hover {\n          background-color: rgba(0, 0, 0, 0.04);\n        }\n        \n        &.selected-row {\n          background-color: rgba(0, 0, 0, 0.08);\n        }\n      }\n      \n      .no-data {\n        text-align: center;\n        padding: 16px;\n        font-style: italic;\n      }\n    }\n  }\n}\n"})}),"\n",(0,r.jsx)(e.h3,{id:"angular-state-management",children:"Angular State Management"}),"\n",(0,r.jsx)(e.h4,{id:"using-ngrx-store",children:"Using NGRX Store"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// user.actions.ts\nimport { createAction, props } from '@ngrx/store';\nimport { User } from '../models/user.model';\n\nexport const loadUser = createAction(\n  '[User] Load User',\n  props<{ id: string }>()\n);\n\nexport const loadUserSuccess = createAction(\n  '[User] Load User Success',\n  props<{ user: User }>()\n);\n\nexport const loadUserFailure = createAction(\n  '[User] Load User Failure',\n  props<{ error: any }>()\n);\n\nexport const updateUser = createAction(\n  '[User] Update User',\n  props<{ user: User }>()\n);\n\nexport const updateUserSuccess = createAction(\n  '[User] Update User Success',\n  props<{ user: User }>()\n);\n\nexport const updateUserFailure = createAction(\n  '[User] Update User Failure',\n  props<{ error: any }>()\n);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// user.reducer.ts\nimport { createReducer, on } from '@ngrx/store';\nimport * as UserActions from './user.actions';\nimport { User } from '../models/user.model';\n\nexport interface UserState {\n  user: User | null;\n  loading: boolean;\n  error: any;\n}\n\nexport const initialState: UserState = {\n  user: null,\n  loading: false,\n  error: null\n};\n\nexport const userReducer = createReducer(\n  initialState,\n  on(UserActions.loadUser, state => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(UserActions.loadUserSuccess, (state, { user }) => ({\n    ...state,\n    user,\n    loading: false\n  })),\n  on(UserActions.loadUserFailure, (state, { error }) => ({\n    ...state,\n    error,\n    loading: false\n  })),\n  on(UserActions.updateUser, state => ({\n    ...state,\n    loading: true,\n    error: null\n  })),\n  on(UserActions.updateUserSuccess, (state, { user }) => ({\n    ...state,\n    user,\n    loading: false\n  })),\n  on(UserActions.updateUserFailure, (state, { error }) => ({\n    ...state,\n    error,\n    loading: false\n  }))\n);\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// user.effects.ts\nimport { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport * as UserActions from './user.actions';\nimport { UserService } from '../services/user.service';\n\n@Injectable()\nexport class UserEffects {\n  loadUser$ = createEffect(() => this.actions$.pipe(\n    ofType(UserActions.loadUser),\n    switchMap(({ id }) => \n      this.userService.getUser(id).pipe(\n        map(user => UserActions.loadUserSuccess({ user })),\n        catchError(error => of(UserActions.loadUserFailure({ error })))\n      )\n    )\n  ));\n  \n  updateUser$ = createEffect(() => this.actions$.pipe(\n    ofType(UserActions.updateUser),\n    switchMap(({ user }) => \n      this.userService.updateUser(user).pipe(\n        map(updatedUser => UserActions.updateUserSuccess({ user: updatedUser })),\n        catchError(error => of(UserActions.updateUserFailure({ error })))\n      )\n    )\n  ));\n  \n  constructor(\n    private actions$: Actions,\n    private userService: UserService\n  ) {}\n}\n"})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// user.selectors.ts\nimport { createFeatureSelector, createSelector } from '@ngrx/store';\nimport { UserState } from './user.reducer';\n\nexport const selectUserState = createFeatureSelector<UserState>('user');\n\nexport const selectUser = createSelector(\n  selectUserState,\n  state => state.user\n);\n\nexport const selectUserLoading = createSelector(\n  selectUserState,\n  state => state.loading\n);\n\nexport const selectUserError = createSelector(\n  selectUserState,\n  state => state.error\n);\n"})}),"\n",(0,r.jsx)(e.h3,{id:"angular-performance-optimization",children:"Angular Performance Optimization"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"OnPush Change Detection Strategy"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"@Component({\n  selector: 'app-user-card',\n  templateUrl: './user-card.component.html',\n  styleUrls: ['./user-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class UserCardComponent {\n  @Input() user: User;\n}\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Lazy Loading Modules"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"// app-routing.module.ts\nconst routes: Routes = [\n  {\n    path: 'dashboard',\n    loadChildren: () => import('./features/dashboard/dashboard.module').then(m => m.DashboardModule)\n  },\n  {\n    path: 'profile',\n    loadChildren: () => import('./features/profile/profile.module').then(m => m.ProfileModule)\n  }\n];\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Using TrackBy with ngFor"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:'<div *ngFor="let item of items; trackBy: trackByFn">\n  {{ item.name }}\n</div>\n'})}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"trackByFn(index: number, item: any): any {\n  return item.id;\n}\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"4",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Virtual Scrolling with CDK"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-html",children:'<cdk-virtual-scroll-viewport itemSize="50" class="viewport">\n  <div *cdkVirtualFor="let item of items" class="item">\n    {{ item.name }}\n  </div>\n</cdk-virtual-scroll-viewport>\n'})}),"\n",(0,r.jsxs)(e.ol,{start:"5",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Pure Pipes"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-typescript",children:"@Pipe({\n  name: 'filter',\n  pure: true\n})\nexport class FilterPipe implements PipeTransform {\n  transform(items: any[], searchText: string): any[] {\n    if (!items || !searchText) {\n      return items;\n    }\n    \n    return items.filter(item => \n      item.name.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n}\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"8-component-library-implementation",children:"8. Component Library Implementation"}),"\n",(0,r.jsx)(e.h3,{id:"creating-a-unified-design-system",children:"Creating a Unified Design System"}),"\n",(0,r.jsx)(e.p,{children:"A comprehensive component library should include:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Design Tokens"}),": Colors, typography, spacing, shadows"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Basic Components"}),": Buttons, inputs, selects, checkboxes"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Complex Components"}),": Forms, tables, modals, navigation"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Layouts"}),": Grids, containers, responsive utilities"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"react-component-library-structure",children:"React Component Library Structure"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"design-system/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 tokens/\n\u2502   \u2502   \u251c\u2500\u2500 colors.ts\n\u2502   \u2502   \u251c\u2500\u2500 typography.ts\n\u2502   \u2502   \u251c\u2500\u2500 spacing.ts\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u251c\u2500\u2500 Button/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Button.tsx\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Button.styles.ts\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Button.test.tsx\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2502   \u251c\u2500\u2500 Input/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Input.tsx\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Input.styles.ts\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Input.test.tsx\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502   \u2514\u2500\u2500 index.ts\n\u251c\u2500\u2500 .storybook/\n\u2502   \u251c\u2500\u2500 main.js\n\u2502   \u2514\u2500\u2500 preview.js\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 README.md\n"})}),"\n",(0,r.jsx)(e.h3,{id:"angular-component-library-structure",children:"Angular Component Library Structure"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"design-system/\n\u251c\u2500\u2500 projects/\n\u2502   \u2514\u2500\u2500 design-system/\n\u2502       \u251c\u2500\u2500 src/\n\u2502       \u2502   \u251c\u2500\u2500 lib/\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 tokens/\n\u2502       \u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502       \u2502   \u2502   \u2502   \u251c\u2500\u2500 button/\n\u2502       \u2502   \u2502   \u2502   \u251c\u2500\u2500 input/\n\u2502       \u2502   \u2502   \u2502   \u2514\u2500\u2500 ...\n\u2502       \u2502   \u2502   \u2514\u2500\u2500 design-system.module.ts\n\u2502       \u2502   \u251c\u2500\u2500 public-api.ts\n\u2502       \u2502   \u2514\u2500\u2500 index.ts\n\u2502       \u2514\u2500\u2500 ng-package.json\n\u251c\u2500\u2500 .storybook/\n\u2502   \u251c\u2500\u2500 main.js\n\u2502   \u2514\u2500\u2500 preview.js\n\u251c\u2500\u2500 angular.json\n\u2514\u2500\u2500 package.json\n"})}),"\n",(0,r.jsx)(e.h3,{id:"documenting-components-with-storybook",children:"Documenting Components with Storybook"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Set up Storybook for React"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npx storybook init\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Create Component Stories"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"// Button.stories.jsx\nimport React from 'react';\nimport { Button } from './Button';\n\nexport default {\n  title: 'Components/Button',\n  component: Button,\n  argTypes: {\n    variant: {\n      control: { type: 'select', options: ['primary', 'secondary', 'outlined'] },\n      defaultValue: 'primary'\n    },\n    size: {\n      control: { type: 'select', options: ['small', 'medium', 'large'] },\n      defaultValue: 'medium'\n    },\n    disabled: {\n      control: 'boolean',\n      defaultValue: false\n    }\n  }\n};\n\nconst Template = (args) => <Button {...args}>Button Text</Button>;\n\nexport const Primary = Template.bind({});\nPrimary.args = {\n  variant: 'primary'\n};\n\nexport const Secondary = Template.bind({});\nSecondary.args = {\n  variant: 'secondary'\n};\n\nexport const Outlined = Template.bind({});\nOutlined.args = {\n  variant: 'outlined'\n};\n\nexport const Small = Template.bind({});\nSmall.args = {\n  size: 'small'\n};\n\nexport const Large = Template.bind({});\nLarge.args = {\n  size: 'large'\n};\n\nexport const Disabled = Template.bind({});\nDisabled.args = {\n  disabled: true\n};\n"})}),"\n",(0,r.jsx)(e.h3,{id:"testing-component-library",children:"Testing Component Library"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Unit Tests with Jest and React Testing Library"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-jsx",children:"// Button.test.jsx\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Button } from './Button';\n\ndescribe('Button', () => {\n  test('renders correctly', () => {\n    render(<Button>Click me</Button>);\n    expect(screen.getByText('Click me')).toBeInTheDocument();\n  });\n  \n  test('handles click events', () => {\n    const handleClick = jest.fn();\n    render(<Button onClick={handleClick}>Click me</Button>);\n    \n    fireEvent.click(screen.getByText('Click me'));\n    expect(handleClick).toHaveBeenCalledTimes(1);\n  });\n  \n  test('applies variant styles', () => {\n    const { rerender } = render(<Button variant=\"primary\">Button</Button>);\n    expect(screen.getByText('Button')).toHaveClass('button--primary');\n    \n    rerender(<Button variant=\"secondary\">Button</Button>);\n    expect(screen.getByText('Button')).toHaveClass('button--secondary');\n  });\n  \n  test('is disabled when disabled prop is true', () => {\n    render(<Button disabled>Button</Button>);\n    expect(screen.getByText('Button')).toBeDisabled();\n  });\n});\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"2",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Visual Regression Testing with Storybook and Chromatic"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npx chromatic --project-token=your-project-token\n"})}),"\n",(0,r.jsxs)(e.ol,{start:"3",children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Accessibility Testing with Storybook Addon"}),":"]}),"\n"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// .storybook/main.js\nmodule.exports = {\n  addons: [\n    '@storybook/addon-a11y',\n    // other addons\n  ],\n};\n"})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"9-testing-and-quality-assurance",children:"9. Testing and Quality Assurance"}),"\n",(0,r.jsx)(e.h3,{id:"testing-strategy",children:"Testing Strategy"}),"\n",(0,r.jsx)(e.p,{children:"Implement a comprehensive testing approach:"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Unit Tests"}),": Test individual components and functions"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Integration Tests"}),": Test component interactions"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Visual Tests"}),": Ensure design fidelity"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Accessibility Tests"}),": Ensure WCAG compliance"]}),"\n",(0,r.jsxs)(e.li,{children:[(0,r.jsx)(e.strong,{children:"Performance Tests"}),": Check rendering speed and efficiency"]}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"automated-testing-setup",children:"Automated Testing Setup"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"For React"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"npm install --save-dev jest @testing-library/react @testing-library/jest-dom @testing-library/user-event jest-axe\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"For Angular"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-bash",children:"ng test --code-coverage\n"})}),"\n",(0,r.jsx)(e.h3,{id:"visual-regression-testing",children:"Visual Regression Testing"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Example with Percy\nimport { percySnapshot } from '@percy/playwright';\n\ntest('visual regression test', async ({ page }) => {\n  await page.goto('http://localhost:3000');\n  await percySnapshot(page, 'Homepage');\n  \n  await page.click('button.login');\n  await percySnapshot(page, 'Login Form');\n});\n"})}),"\n",(0,r.jsx)(e.h3,{id:"accessibility-testing",children:"Accessibility Testing"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"// Example with jest-axe\nimport { render } from '@testing-library/react';\nimport { axe, toHaveNoViolations } from 'jest-axe';\nimport { Button } from './Button';\n\nexpect.extend(toHaveNoViolations);\n\ntest('button has no accessibility violations', async () => {\n  const { container } = render(<Button>Click me</Button>);\n  const results = await axe(container);\n  expect(results).toHaveNoViolations();\n});\n"})}),"\n",(0,r.jsx)(e.h3,{id:"code-quality-checks",children:"Code Quality Checks"}),"\n",(0,r.jsx)(e.p,{children:"Set up linting and formatting:"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:".eslintrc.js (React)"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-javascript",children:"module.exports = {\n  parser: '@typescript-eslint/parser',\n  extends: [\n    'eslint:recommended',\n    'plugin:react/recommended',\n    'plugin:@typescript-eslint/recommended',\n    'plugin:jsx-a11y/recommended',\n    'prettier'\n  ],\n  plugins: ['react', '@typescript-eslint', 'jsx-a11y'],\n  rules: {\n    // Custom rules\n  }\n};\n"})}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:".eslintrc.json (Angular)"}),":"]}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{className:"language-json",children:'{\n  "root": true,\n  "ignorePatterns": ["projects/**/*"],\n  "overrides": [\n    {\n      "files": ["*.ts"],\n      "extends": [\n        "eslint:recommended",\n        "plugin:@typescript-eslint/recommended",\n        "plugin:@angular-eslint/recommended",\n        "plugin:@angular-eslint/template/process-inline-templates"\n      ],\n      "rules": {\n        // Custom rules\n      }\n    },\n    {\n      "files": ["*.html"],\n      "extends": [\n        "plugin:@angular-eslint/template/recommended"\n      ],\n      "rules": {\n        // Custom rules\n      }\n    }\n  ]\n}\n'})}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"10-hands-on-workshop-guide",children:"10. Hands-On Workshop Guide"}),"\n",(0,r.jsx)(e.h3,{id:"workshop-title-build-a-design-system-from-figma-to-code",children:"Workshop Title: Build a Design System from Figma to Code"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Duration"}),": 3 hours"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Prerequisites"}),":"]}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"VS Code with GitHub Copilot extension"}),"\n",(0,r.jsx)(e.li,{children:"Node.js installed"}),"\n",(0,r.jsx)(e.li,{children:"Basic knowledge of React or Angular"}),"\n",(0,r.jsx)(e.li,{children:"Figma account"}),"\n",(0,r.jsx)(e.li,{children:"GitHub account"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"workshop-structure",children:"Workshop Structure"}),"\n",(0,r.jsx)(e.h4,{id:"1-introduction-15-minutes",children:"1. Introduction (15 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Overview of the design-to-code workflow"}),"\n",(0,r.jsx)(e.li,{children:"Explanation of tools: GitHub Copilot, MCP servers, Azure AI Foundry"}),"\n",(0,r.jsx)(e.li,{children:"Introduction to the Figma design we'll be implementing"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"2-environment-setup-30-minutes",children:"2. Environment Setup (30 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Install necessary tools and extensions"}),"\n",(0,r.jsx)(e.li,{children:"Configure GitHub Copilot"}),"\n",(0,r.jsx)(e.li,{children:"Set up Figma MCP server"}),"\n",(0,r.jsx)(e.li,{children:"Initialize project structure"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"3-implementing-core-components-60-minutes",children:"3. Implementing Core Components (60 minutes)"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exercise 1: Button Component (20 minutes)"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Analyze the Button component in Figma"}),"\n",(0,r.jsx)(e.li,{children:"Use GitHub Copilot to generate the base component"}),"\n",(0,r.jsx)(e.li,{children:"Implement variants and states"}),"\n",(0,r.jsx)(e.li,{children:"Test the component"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exercise 2: Form Components (20 minutes)"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Analyze form components in Figma (Input, Select, Checkbox)"}),"\n",(0,r.jsx)(e.li,{children:"Generate components with GitHub Copilot"}),"\n",(0,r.jsx)(e.li,{children:"Apply styling and behavior"}),"\n",(0,r.jsx)(e.li,{children:"Combine into a form"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exercise 3: Card Component (20 minutes)"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Analyze the Card component in Figma"}),"\n",(0,r.jsx)(e.li,{children:"Generate the component with GitHub Copilot"}),"\n",(0,r.jsx)(e.li,{children:"Implement responsive behavior"}),"\n",(0,r.jsx)(e.li,{children:"Add interactivity"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"4-advanced-components-45-minutes",children:"4. Advanced Components (45 minutes)"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exercise 4: Data Table Component (25 minutes)"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Analyze the data table design in Figma"}),"\n",(0,r.jsx)(e.li,{children:"Generate the component structure"}),"\n",(0,r.jsx)(e.li,{children:"Implement sorting and pagination"}),"\n",(0,r.jsx)(e.li,{children:"Add row selection"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exercise 5: Modal Component (20 minutes)"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Analyze the modal design in Figma"}),"\n",(0,r.jsx)(e.li,{children:"Create the component with GitHub Copilot"}),"\n",(0,r.jsx)(e.li,{children:"Implement open/close animations"}),"\n",(0,r.jsx)(e.li,{children:"Add accessibility features"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"5-integrating-with-backend-30-minutes",children:"5. Integrating with Backend (30 minutes)"}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsx)(e.li,{children:"Set up mock API service"}),"\n",(0,r.jsx)(e.li,{children:"Integrate components with data fetching"}),"\n",(0,r.jsx)(e.li,{children:"Implement loading and error states"}),"\n",(0,r.jsx)(e.li,{children:"Create a complete page"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"6-wrap-up-and-qa-15-minutes",children:"6. Wrap-up and Q&A (15 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Review what we've learned"}),"\n",(0,r.jsx)(e.li,{children:"Discuss next steps"}),"\n",(0,r.jsx)(e.li,{children:"Q&A session"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"exercise-examples",children:"Exercise Examples"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Exercise 1: Button Component"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Analyze the Figma design:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Note the variants: primary, secondary, outlined"}),"\n",(0,r.jsx)(e.li,{children:"Identify states: default, hover, active, disabled"}),"\n",(0,r.jsx)(e.li,{children:"Note sizing: small, medium, large"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Create the Button component using GitHub Copilot:"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"For React:"})})}),"\n",(0,r.jsx)(e.p,{children:"Prompt:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Create a Button component in React with TypeScript that:\n- Has primary, secondary, and outlined variants\n- Supports small, medium, and large sizes\n- Has default, hover, active, and disabled states\n- Can include left and right icons\n- Has a loading state with a spinner\n- Is fully accessible with proper ARIA attributes\n- Uses styled-components for styling\n"})}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.em,{children:(0,r.jsx)(e.strong,{children:"For Angular:"})})}),"\n",(0,r.jsx)(e.p,{children:"Prompt:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Create a Button component in Angular that:\n- Has primary, secondary, and outlined variants as @Input\n- Supports small, medium, and large sizes as @Input\n- Has default, hover, active, and disabled states\n- Can include left and right icons as @Input\n- Has a loading state with a spinner as @Input\n- Is fully accessible with proper ARIA attributes\n- Uses SCSS for styling\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Test the Button component:"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Create simple test cases for each variant"}),"\n",(0,r.jsx)(e.li,{children:"Test click behavior, disabled state, and loading state"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"11-demonstration-workshop-guide",children:"11. Demonstration Workshop Guide"}),"\n",(0,r.jsx)(e.h3,{id:"workshop-title-from-pixels-to-production-ai-powered-design-to-code",children:"Workshop Title: From Pixels to Production: AI-Powered Design-to-Code"}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Duration"}),": 1 hour"]}),"\n",(0,r.jsxs)(e.p,{children:[(0,r.jsx)(e.strong,{children:"Description"}),": This demonstration workshop showcases how to transform Figma designs into production-ready code using AI-powered tools. Participants will observe a complete workflow from design analysis to code generation and refinement."]}),"\n",(0,r.jsx)(e.h3,{id:"workshop-structure-1",children:"Workshop Structure"}),"\n",(0,r.jsx)(e.h4,{id:"1-introduction-5-minutes",children:"1. Introduction (5 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Overview of the design-to-code challenge"}),"\n",(0,r.jsx)(e.li,{children:"Introduction to the tools: Figma, GitHub Copilot, MCP, Azure AI"}),"\n",(0,r.jsx)(e.li,{children:"Showcase of the final result we'll be building"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"2-design-analysis-10-minutes",children:"2. Design Analysis (10 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Walk through the Figma design file"}),"\n",(0,r.jsx)(e.li,{children:"Analyze component structure and hierarchy"}),"\n",(0,r.jsx)(e.li,{children:"Identify design tokens and patterns"}),"\n",(0,r.jsx)(e.li,{children:'Discuss how AI tools "see" design elements'}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"3-setup-demonstration-5-minutes",children:"3. Setup Demonstration (5 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Show VS Code configuration"}),"\n",(0,r.jsx)(e.li,{children:"Demonstrate GitHub Copilot setup"}),"\n",(0,r.jsx)(e.li,{children:"Configure MCP servers"}),"\n",(0,r.jsx)(e.li,{children:"Connect to Azure AI Foundry"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"4-live-coding-demonstrations-30-minutes",children:"4. Live Coding Demonstrations (30 minutes)"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Demo 1: Basic Components (10 minutes)"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Generate Button, Input, and Card components"}),"\n",(0,r.jsx)(e.li,{children:"Show how AI handles different variants and states"}),"\n",(0,r.jsx)(e.li,{children:"Demonstrate styling approach"}),"\n",(0,r.jsx)(e.li,{children:"Show testing and accessibility considerations"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Demo 2: Complex Component (10 minutes)"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Generate a Data Table component"}),"\n",(0,r.jsx)(e.li,{children:"Show how AI handles complex interaction patterns"}),"\n",(0,r.jsx)(e.li,{children:"Demonstrate performance optimization"}),"\n",(0,r.jsx)(e.li,{children:"Showcase responsive behavior"}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Demo 3: Full Page Implementation (10 minutes)"})}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Combine components into a complete page"}),"\n",(0,r.jsx)(e.li,{children:"Demonstrate state management"}),"\n",(0,r.jsx)(e.li,{children:"Show API integration"}),"\n",(0,r.jsx)(e.li,{children:"Highlight how AI can refactor and optimize"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"5-best-practices-5-minutes",children:"5. Best Practices (5 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Tips for optimal Figma organization"}),"\n",(0,r.jsx)(e.li,{children:"Effective prompting strategies"}),"\n",(0,r.jsx)(e.li,{children:"Quality assurance process"}),"\n",(0,r.jsx)(e.li,{children:"Collaboration workflow"}),"\n"]}),"\n",(0,r.jsx)(e.h4,{id:"6-qa-5-minutes",children:"6. Q&A (5 minutes)"}),"\n",(0,r.jsxs)(e.ul,{children:["\n",(0,r.jsx)(e.li,{children:"Answer participant questions"}),"\n",(0,r.jsx)(e.li,{children:"Provide additional resources"}),"\n",(0,r.jsx)(e.li,{children:"Share access to sample code"}),"\n"]}),"\n",(0,r.jsx)(e.h3,{id:"example-demos",children:"Example Demos"}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Demo 1: Basic Components"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Start with the Figma design of a Button component"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Show the design specifications in Dev Mode"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Write a prompt for GitHub Copilot:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Generate a Button component based on this Figma design:\n- It should support primary (blue), secondary (gray), and outlined variants\n- Sizes should be small (32px height), medium (40px height), and large (48px height)\n- Include hover and active states with color changes\n- Support disabled state with reduced opacity\n- Include optional left and right icons\n- Add a loading state with a spinner\n- Ensure it's fully accessible\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Let GitHub Copilot generate the code"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Review and refine the generated code"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Demonstrate the component in different states"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.p,{children:(0,r.jsx)(e.strong,{children:"Demo 3: Full Page Implementation"})}),"\n",(0,r.jsxs)(e.ol,{children:["\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Show the complete Figma design of a dashboard page"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Analyze the layout and component structure"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Write a prompt for GitHub Copilot:"}),"\n",(0,r.jsx)(e.pre,{children:(0,r.jsx)(e.code,{children:"Generate a complete Dashboard page based on the Figma design with:\n- Responsive header with logo, navigation, and user menu\n- Sidebar with collapsible navigation\n- Main content area with statistics cards\n- Data table showing user transactions\n- Filter and search functionality\n- Use proper state management for data fetching\n- Implement responsive behavior for mobile, tablet, and desktop\n"})}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Review and refine the generated layout"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Connect to mock API for data"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Demonstrate responsive behavior"}),"\n"]}),"\n",(0,r.jsxs)(e.li,{children:["\n",(0,r.jsx)(e.p,{children:"Show performance optimization techniques"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.h2,{id:"12-troubleshooting-guide",children:"12. Troubleshooting Guide"}),"\n",(0,r.jsx)(e.h3,{id:"common-issues-with-figma-integration",children:"Common Issues with Figma Integration"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Issue"}),(0,r.jsx)(e.th,{children:"Solution"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Figma API authentication fails"}),(0,r.jsx)(e.td,{children:"Check API key permissions and regenerate if necessary"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Auto Layout not translating correctly"}),(0,r.jsx)(e.td,{children:"Ensure proper Auto Layout setup in Figma with consistent spacing"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Component variants missing"}),(0,r.jsx)(e.td,{children:"Use proper variant setup in Figma with complete property sets"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Color tokens not matching"}),(0,r.jsx)(e.td,{children:"Use Figma variables instead of direct color values"})]})]})]}),"\n",(0,r.jsx)(e.h3,{id:"common-issues-with-github-copilot",children:"Common Issues with GitHub Copilot"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Issue"}),(0,r.jsx)(e.th,{children:"Solution"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Generated code is incomplete"}),(0,r.jsx)(e.td,{children:"Break down requests into smaller, more specific prompts"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Styling doesn't match design"}),(0,r.jsx)(e.td,{children:"Provide more detailed design specifications in prompts"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Component behavior is incorrect"}),(0,r.jsx)(e.td,{children:"Clearly specify all interaction patterns and state transitions"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"MCP server connection issues"}),(0,r.jsx)(e.td,{children:"Check environment variables and server configuration"})]})]})]}),"\n",(0,r.jsx)(e.h3,{id:"common-issues-with-react-implementation",children:"Common Issues with React Implementation"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Issue"}),(0,r.jsx)(e.th,{children:"Solution"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Component re-rendering too often"}),(0,r.jsx)(e.td,{children:"Use React.memo, useCallback, and useMemo"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Styling inconsistencies"}),(0,r.jsx)(e.td,{children:"Use a CSS-in-JS solution or strict CSS methodology"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Prop drilling becoming unwieldy"}),(0,r.jsx)(e.td,{children:"Implement Context API or state management"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Type errors in TypeScript"}),(0,r.jsx)(e.td,{children:"Define proper interfaces for all components and props"})]})]})]}),"\n",(0,r.jsx)(e.h3,{id:"common-issues-with-angular-implementation",children:"Common Issues with Angular Implementation"}),"\n",(0,r.jsxs)(e.table,{children:[(0,r.jsx)(e.thead,{children:(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.th,{children:"Issue"}),(0,r.jsx)(e.th,{children:"Solution"})]})}),(0,r.jsxs)(e.tbody,{children:[(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Change detection performance"}),(0,r.jsx)(e.td,{children:"Use OnPush strategy and optimize templates"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Component communication issues"}),(0,r.jsx)(e.td,{children:"Use proper @Input/@Output or state management"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Module organization problems"}),(0,r.jsx)(e.td,{children:"Follow feature module pattern with proper imports"})]}),(0,r.jsxs)(e.tr,{children:[(0,r.jsx)(e.td,{children:"Form validation complexity"}),(0,r.jsx)(e.td,{children:"Use reactive forms with custom validators"})]})]})]}),"\n",(0,r.jsx)(e.hr,{}),"\n",(0,r.jsx)(e.p,{children:"This playbook provides a comprehensive guide to implementing a design-to-code workflow using AI-powered tools. By following these guidelines, you can dramatically reduce development time while maintaining high-quality, accessible, and performant implementations in both React and Angular frameworks."})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,r.jsx)(e,{...n,children:(0,r.jsx)(d,{...n})}):d(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:o(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);